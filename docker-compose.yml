services:
  mysql:
    image: mysql:8.0
    container_name: notifier-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-app}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    ports:
      - "3700:3306"
    volumes:
      - notifi_k_db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: notifier-php
    restart: unless-stopped
    volumes:
      - ./laravel:/var/www/html
    depends_on:
      mysql:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: notifier-nginx
    restart: unless-stopped
    ports:
      - "8988:80"
    volumes:
      - ./laravel:/var/www/html:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - php

  laravel:
    build:
      context: ./laravel
    container_name: notifier-laravel
    restart: unless-stopped
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${MYSQL_DATABASE:-app}
      DB_USERNAME: ${MYSQL_USER:-app}
      DB_PASSWORD: ${MYSQL_PASSWORD:-app}
    volumes:
      - ./laravel:/var/www/html
    depends_on:
      mysql:
        condition: service_healthy
    # Runs install/migrations and then a long-running worker to keep the container alive
    command: >-
      sh -lc "composer install || true;
      php artisan key:generate --force || true;
      php artisan migrate --force || true;
      php artisan queue:work --tries=3 --sleep=3"

  react:
    build:
      context: ./react
    container_name: notifier-react
    restart: unless-stopped
    ports:
      - "8989:5173"
    environment:
      HOST: 0.0.0.0
    working_dir: /app
    volumes:
      - ./react:/app
    command: sh -lc "npm install && npm run dev -- --host"

volumes:
  notifi_k_db_data:
